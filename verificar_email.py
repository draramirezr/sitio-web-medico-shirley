# -*- coding: utf-8 -*-
"""
Script para verificar la configuraci√≥n de email
Ejecutar: python verificar_email.py
"""

import os
import sys
from dotenv import load_dotenv

# Cargar variables de entorno
load_dotenv()

print("\n" + "=" * 70)
print("üîç VERIFICACI√ìN DE CONFIGURACI√ìN DE EMAIL")
print("=" * 70 + "\n")

# 1. Verificar que existe el archivo .env
print("üìã Paso 1: Verificar archivo .env")
if os.path.exists('.env'):
    print("   ‚úÖ Archivo .env encontrado\n")
else:
    print("   ‚ùå ERROR: Archivo .env NO encontrado")
    print("   ‚ö†Ô∏è  Debes crear el archivo .env en la carpeta ra√≠z del proyecto\n")
    print("   Instrucciones:")
    print("   1. Crea un archivo llamado '.env'")
    print("   2. Agrega las siguientes l√≠neas:")
    print("      EMAIL_USERNAME=dra.ramirezr@gmail.com")
    print("      EMAIL_PASSWORD=tu_contrase√±a_de_aplicacion")
    print("      EMAIL_DESTINATARIO=dra.ramirezr@gmail.com")
    print("\n" + "=" * 70 + "\n")
    sys.exit(1)

# 2. Verificar variables de entorno
print("üìã Paso 2: Verificar variables de entorno")
EMAIL_USERNAME = os.getenv('EMAIL_USERNAME', '')
EMAIL_PASSWORD = os.getenv('EMAIL_PASSWORD', '')
EMAIL_DESTINATARIO = os.getenv('EMAIL_DESTINATARIO', '')

if EMAIL_USERNAME:
    print(f"   ‚úÖ EMAIL_USERNAME: {EMAIL_USERNAME}")
else:
    print("   ‚ùå ERROR: EMAIL_USERNAME no configurado")

if EMAIL_DESTINATARIO:
    print(f"   ‚úÖ EMAIL_DESTINATARIO: {EMAIL_DESTINATARIO}")
else:
    print("   ‚ùå ERROR: EMAIL_DESTINATARIO no configurado")

if EMAIL_PASSWORD:
    # Mostrar solo los primeros y √∫ltimos 4 caracteres por seguridad
    password_masked = EMAIL_PASSWORD[:4] + " **** " + EMAIL_PASSWORD[-4:]
    print(f"   ‚úÖ EMAIL_PASSWORD: {password_masked} (16 caracteres)")
    
    # Verificar longitud de la contrase√±a
    password_clean = EMAIL_PASSWORD.replace(' ', '')
    if len(password_clean) == 16:
        print(f"   ‚úÖ Longitud correcta: 16 caracteres")
    else:
        print(f"   ‚ö†Ô∏è  ADVERTENCIA: La contrase√±a tiene {len(password_clean)} caracteres")
        print("      Las contrase√±as de aplicaci√≥n de Gmail tienen 16 caracteres")
else:
    print("   ‚ùå ERROR: EMAIL_PASSWORD no configurado")

print()

# 3. Verificar que python-dotenv est√° instalado
print("üìã Paso 3: Verificar python-dotenv")
try:
    import dotenv
    print(f"   ‚úÖ python-dotenv instalado\n")
except ImportError:
    print("   ‚ùå ERROR: python-dotenv NO est√° instalado")
    print("   ‚ö†Ô∏è  Ejecuta: pip install python-dotenv\n")
    sys.exit(1)

# 4. Verificar que se puede importar smtplib
print("üìã Paso 4: Verificar librer√≠as de email")
try:
    import smtplib
    from email.mime.text import MIMEText
    from email.mime.multipart import MIMEMultipart
    print("   ‚úÖ Librer√≠as de email disponibles\n")
except ImportError as e:
    print(f"   ‚ùå ERROR: No se pueden importar librer√≠as de email: {e}\n")
    sys.exit(1)

# 5. Verificar conexi√≥n con Gmail
print("üìã Paso 5: Verificar conexi√≥n con Gmail (SMTP)")
if EMAIL_USERNAME and EMAIL_PASSWORD:
    try:
        print("   ‚è≥ Conectando a smtp.gmail.com:587...")
        server = smtplib.SMTP('smtp.gmail.com', 587, timeout=10)
        print("   ‚úÖ Conexi√≥n establecida")
        
        print("   ‚è≥ Iniciando TLS...")
        server.starttls()
        print("   ‚úÖ TLS iniciado")
        
        print("   ‚è≥ Autenticando con Gmail...")
        server.login(EMAIL_USERNAME, EMAIL_PASSWORD)
        print("   ‚úÖ Autenticaci√≥n exitosa")
        
        server.quit()
        print()
        
        # 6. Preguntar si desea enviar un email de prueba
        print("=" * 70)
        print("‚úÖ CONFIGURACI√ìN CORRECTA - TODO EST√Å LISTO")
        print("=" * 70)
        print()
        
        respuesta = input("¬øDeseas enviar un email de prueba? (s/n): ").strip().lower()
        
        if respuesta == 's':
            print("\nüìß Enviando email de prueba...")
            
            # Crear mensaje de prueba
            msg = MIMEMultipart('alternative')
            msg['Subject'] = '‚úÖ Prueba de Configuraci√≥n - Sitio Web'
            msg['From'] = EMAIL_USERNAME
            msg['To'] = EMAIL_DESTINATARIO
            
            html = """
            <html>
            <body style="font-family: Arial, sans-serif; background-color: #F2E2E6; padding: 20px;">
                <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 40px; border-radius: 15px; box-shadow: 0 4px 20px rgba(0,0,0,0.1);">
                    <h2 style="color: #ACACAD; border-bottom: 3px solid #CEB0B7; padding-bottom: 15px; margin-top: 0;">
                        ‚úÖ Configuraci√≥n de Email Exitosa
                    </h2>
                    
                    <div style="background-color: #F2E2E6; padding: 20px; border-radius: 10px; margin: 20px 0;">
                        <p style="margin: 8px 0; color: #282828; font-size: 16px;">
                            ¬°Felicidades! Tu configuraci√≥n de email est√° funcionando correctamente.
                        </p>
                    </div>
                    
                    <div style="background-color: #fff; padding: 20px; border-left: 4px solid #CEB0B7; margin: 20px 0;">
                        <p style="margin: 0; color: #282828; line-height: 1.6;">
                            <strong style="color: #ACACAD;">‚úÖ Configuraci√≥n verificada:</strong><br>
                            ‚Ä¢ Archivo .env configurado correctamente<br>
                            ‚Ä¢ Conexi√≥n con Gmail establecida<br>
                            ‚Ä¢ Autenticaci√≥n exitosa<br>
                            ‚Ä¢ Email de prueba enviado<br><br>
                            
                            <strong style="color: #ACACAD;">üìß A partir de ahora recibir√°s emails cuando:</strong><br>
                            ‚Ä¢ Alguien env√≠e el formulario de contacto<br>
                            ‚Ä¢ Alguien solicite una cita<br>
                            ‚Ä¢ Se solicite recuperaci√≥n de contrase√±a<br>
                            ‚Ä¢ Se generen constancias de pacientes<br>
                        </p>
                    </div>
                    
                    <p style="color: #999; font-size: 12px; text-align: center; margin-top: 30px; line-height: 1.5;">
                        Este es un mensaje de prueba autom√°tico<br>
                        <strong>Sitio Web - Dra. Shirley Ram√≠rez</strong><br>
                        Ginec√≥loga y Obstetricia
                    </p>
                </div>
            </body>
            </html>
            """
            
            part = MIMEText(html, 'html')
            msg.attach(part)
            
            # Enviar
            with smtplib.SMTP('smtp.gmail.com', 587) as server:
                server.starttls()
                server.login(EMAIL_USERNAME, EMAIL_PASSWORD)
                server.send_message(msg)
            
            print("\n" + "=" * 70)
            print("‚úÖ EMAIL DE PRUEBA ENVIADO EXITOSAMENTE")
            print("=" * 70)
            print(f"\nüìß Revisa tu bandeja de entrada: {EMAIL_DESTINATARIO}")
            print("‚ö†Ô∏è  Si no lo ves, revisa la carpeta de SPAM\n")
        else:
            print("\n‚úÖ Configuraci√≥n verificada. No se envi√≥ email de prueba.\n")
        
    except smtplib.SMTPAuthenticationError:
        print("   ‚ùå ERROR DE AUTENTICACI√ìN")
        print("   ‚ö†Ô∏è  La contrase√±a de Gmail es incorrecta\n")
        print("   Soluciones:")
        print("   1. Ve a: https://myaccount.google.com/security")
        print("   2. Verifica que la verificaci√≥n en 2 pasos est√© activa")
        print("   3. Ve a 'Contrase√±as de aplicaciones'")
        print("   4. Genera una nueva contrase√±a de aplicaci√≥n")
        print("   5. Actualiza el archivo .env con la nueva contrase√±a")
        print("   6. Ejecuta este script nuevamente\n")
        sys.exit(1)
        
    except smtplib.SMTPException as e:
        print(f"   ‚ùå ERROR SMTP: {e}")
        print("   ‚ö†Ô∏è  Verifica tu conexi√≥n a internet\n")
        sys.exit(1)
        
    except Exception as e:
        print(f"   ‚ùå ERROR: {e}")
        print("   ‚ö†Ô∏è  Revisa la configuraci√≥n en .env\n")
        sys.exit(1)
else:
    print("   ‚ùå No se puede verificar: EMAIL_USERNAME o EMAIL_PASSWORD no configurados")
    print()
    sys.exit(1)

print("=" * 70)
print("‚úÖ VERIFICACI√ìN COMPLETADA")
print("=" * 70)
print()

